# generated assembly #0 0100d0	ARM	0xe24f2090	sub r2, pc, #144 ; 0x90
#1 0100d4	RISCV	0x50010d93	addi s11,sp,1280
#2 0100d8	SPARC	0xbe006500	add  %g1, 0x500, %i7
#3 0100dc	RISCV	0x00000713	li a4,0
#4 0100e0	SPARC	0xae102022	mov  0x22, %l7 
#5 0100e4	RISCV	0x374000ef	jal ra,10458 <set_pin>
#6 0100e8	RISCV	0x000e8313	mv t1,t4
#7 0100ec	SPARC	0xbc100003	mov  %g3, %fp
#8 0100f0	MIPS	0x23a20100	addi v0,sp,256
#9 0100f4	RISCV	0x002ea023	sw sp,0(t4)
#10 0100f8	SPARC	0x82006004	add  %g1, 4, %g1
#11 0100fc	RISCV	0x002ea023	sw sp,0(t4)
#12 010100	RISCV	0x00012023	sw zero,0(sp)
#13 010104	SPARC	0x82006020	add  %g1, 0x20, %g1
#14 010108	MIPS	0xafa20004	sw v0,4(sp)
#15 01010c	MIPS	0xafa00008	sw zero,8(sp)
#16 010110	MIPS	0xafa0000c	sw zero,12(sp)
#17 010114	MIPS	0xafa00014	sw zero,20(sp)
#18 010118	MIPS	0xafa00018	sw zero,24(sp)
ready_prompt:   --> sw $zero, 8($sp)   
#19 01011c	MIPS	0xafa00008	sw zero,8(sp)
#20 010120	SPARC	0x82102004	mov  4, %g1 
#21 010124	SPARC	0x90102001	mov  1, %o0 
#22 010128	SPARC	0x13000041	sethi  %hi(0x10400), %o1
#22 010128	SPARC	0x92126150	or  %o1, 0x150, %o1 
#24 010130	SPARC	0x84100009	mov  %o1, %g2
#25 010134	SPARC	0x94102006	mov  6, %o2 
#26 010138	SPARC	0x91d02010	ta  0x10
#27 01013c	SPARC	0x90102000	clr  %o0 
#28 010140	MIPS	0x23a20008	addi v0,sp,8
#29 010144	SPARC	0x92100001	mov  %g1, %o1
#30 010148	SPARC	0x82102003	mov  3, %g1 
#31 01014c	SPARC	0x94102001	mov  1, %o2 
#32 010150	SPARC	0x91d02010	ta  0x10
#33 010154	SPARC	0x86100008	mov  %o0, %g3
#34 010158	SPARC	0x90102001	mov  1, %o0 
#35 01015c	RISCV	0x008e8113	addi sp,t4,8
#36 010160	SPARC	0x92100001	mov  %g1, %o1
#37 010164	SPARC	0x94102001	mov  1, %o2 
#38 010168	SPARC	0x82102004	mov  4, %g1 
#39 01016c	SPARC	0x91d02010	ta  0x10
#40 010170	RISCV	0x2a030663	beqz t1,1041c <quitit>
#41 010174	RISCV	0x008e8203	lb tp,8(t4)
#42 010178	MIPS	0x2405006a	li a1,106
#43 01017c	RISCV	0x0c520263	beq tp,t0,10240 <joshua>
#44 010180	SPARC	0x90102001	mov  1, %o0 
#45 010184	RISCV	0x000d8113	mv sp,s11
#46 010188	SPARC	0x92100001	mov  %g1, %o1
#47 01018c	SPARC	0x94102001	mov  1, %o2 
#48 010190	SPARC	0x82102004	mov  4, %g1 
#49 010194	SPARC	0x91d02010	ta  0x10
#50 010198	MIPS	0x2405006e	li a1,110
#51 01019c	RISCV	0xf85200e3	beq tp,t0,1011c <ready_prompt>
#52 0101a0	MIPS	0x24050076	li a1,118
#53 0101a4	RISCV	0x10520663	beq tp,t0,102b0 <verify_input>
#54 0101a8	MIPS	0x24050065	li a1,101
#55 0101ac	RISCV	0x00520863	beq tp,t0,101bc <enter_key>
#56 0101b0	MIPS	0x24050070	li a1,112
#57 0101b4	RISCV	0x04520e63	beq tp,t0,10210 <print_input>
#58 0101b8	MIPS	0x10000099	b 10420 <quitit>
enter_key:   --> mov	0,%o0			    
#59 0101bc	SPARC	0x90102000	clr  %o0 
#60 0101c0	RISCV	0x000ea103	lw sp,0(t4)
#61 0101c4	SPARC	0x92100001	mov  %g1, %o1
#62 0101c8	SPARC	0x82102003	mov  3, %g1 
#63 0101cc	ARM	0xe280c020	add ip, r0, #32
#64 0101d0	SPARC	0x94100006	mov  %g6, %o2
#65 0101d4	SPARC	0x91d02010	ta  0x10
#66 0101d8	SPARC	0x86100008	mov  %o0, %g3
#67 0101dc	MIPS	0xa3a6000e	sb a2,14(sp)
#68 0101e0	ARM	0xe3a05000	mov r5, #0
check_loop_head:   --> lw x3, 0(x29)
#69 0101e4	RISCV	0x000ea183	lw gp,0(t4)
#70 0101e8	RISCV	0x02c2d263	ble a2,t0,1020c <check_loop_end>
#71 0101ec	MIPS	0x00653020	add a2,v1,a1
#72 0101f0	MIPS	0x80c70000	lb a3,0(a2)
#73 0101f4	SPARC	0x82102029	mov  0x29, %g1 
#74 0101f8	RISCV	0x22715263	ble t2,sp,1041c <quitit>
#75 0101fc	SPARC	0x82102067	mov  0x67, %g1 
#76 010200	RISCV	0x2023de63	ble sp,t2,1041c <quitit>
#77 010204	MIPS	0x20a50001	addi a1,a1,1
#78 010208	RISCV	0xfddff06f	j 101e4 <check_loop_head>
check_loop_end:   --> j ready_prompt
#79 01020c	RISCV	0xf11ff06f	j 1011c <ready_prompt>
print_input:   --> addi x11, x29, 0
#80 010210	RISCV	0x000e8593	mv a1,t4
#81 010214	RISCV	0x00100513	li a0,1
#82 010218	RISCV	0x000ea583	lw a1,0(t4)
#83 01021c	MIPS	0x83ac000e	lb t4,14(sp)
#84 010220	RISCV	0x04000893	li a7,64
#85 010224	RISCV	0x00000073	ecall
#86 010228	ARM	0xe3a00001	mov r0, #1
#87 01022c	RISCV	0x000d8093	mv ra,s11
#88 010230	ARM	0xe3a02001	mov r2, #1
#89 010234	ARM	0xe3a07004	mov r7, #4
#90 010238	ARM	0xef000000	svc 0x00000000
#91 01023c	RISCV	0xee1ff06f	j 1011c <ready_prompt>
joshua:   --> mov	0,%o0			
#92 010240	SPARC	0x90102000	clr  %o0 
#93 010244	RISCV	0x014e8113	addi sp,t4,20
#94 010248	SPARC	0x92100001	mov  %g1, %o1
#95 01024c	SPARC	0x94102006	mov  6, %o2 
#96 010250	SPARC	0x82102003	mov  3, %g1 
#97 010254	SPARC	0x91d02010	ta  0x10
#98 010258	SPARC	0x86100008	mov  %o0, %g3
#99 01025c	MIPS	0x24050006	li a1,6
#100 010260	RISCV	0x1a531e63	bne t1,t0,1041c <quitit>
#101 010264	MIPS	0x3c057568	lui a1,0x7568
#102 010268	MIPS	0x34a5736f	ori a1,a1,0x736f
#103 01026c	RISCV	0x014ea303	lw t1,20(t4)
#104 010270	MIPS	0x24050a61	li a1,2657
#105 010274	RISCV	0x018ea303	lw t1,24(t4)
#106 010278	RISCV	0x1a531263	bne t1,t0,1041c <quitit>
#107 01027c	SPARC	0x90102001	mov  1, %o0 
#108 010280	RISCV	0x014e8113	addi sp,t4,20
#109 010284	SPARC	0x92100001	mov  %g1, %o1
#110 010288	SPARC	0x94102006	mov  6, %o2 
#111 01028c	SPARC	0x82102004	mov  4, %g1 
#112 010290	SPARC	0x91d02010	ta  0x10
#113 010294	SPARC	0x90102001	mov  1, %o0 
#114 010298	SPARC	0x8e07e031	add  %i7, 0x31, %g7
#115 01029c	SPARC	0x92100007	mov  %g7, %o1
#116 0102a0	SPARC	0x9410201d	mov  0x1d, %o2 
#117 0102a4	SPARC	0x82102004	mov  4, %g1 
#118 0102a8	SPARC	0x91d02010	ta  0x10
#119 0102ac	RISCV	0xe71ff06f	j 1011c <ready_prompt>
verify_input:   --> lw x2, 0(x29)
#120 0102b0	RISCV	0x000ea103	lw sp,0(t4)
#121 0102b4	RISCV	0x00012103	lw sp,0(sp)
#122 0102b8	RISCV	0x16010263	beqz sp,1041c <quitit>
#123 0102bc	SPARC	0xae25e001	dec  %l7
#124 0102c0	SPARC	0x82100017	mov  %l7, %g1
#125 0102c4	RISCV	0x14010c63	beqz sp,1041c <quitit>
#126 0102c8	SPARC	0x05000041	sethi  %hi(0x10400), %g2
#126 0102c8	SPARC	0x8410a157	or  %g2, 0x157, %g2 
#128 0102d0	ARM	0xe1a00004	mov r0, r4
#129 0102d4	RISCV	0x00000093	li ra,0
#130 0102d8	ARM	0xe3a07005	mov r7, #5
#131 0102dc	ARM	0xef000000	svc 0x00000000
#132 0102e0	RISCV	0x00000113	li sp,0
#133 0102e4	ARM	0xe1a04000	mov r4, r0
#134 0102e8	RISCV	0x03020113	addi sp,tp,48 # 30 <_padding-0x10024>
#135 0102ec	RISCV	0x002ea823	sw sp,16(t4)
reading_license_from_fd:   --> mov	%g2,%o0	     
#136 0102f0	SPARC	0x90100002	mov  %g2, %o0
#137 0102f4	MIPS	0x8fa20004	lw v0,4(sp)
#138 0102f8	SPARC	0x92100001	mov  %g1, %o1
#139 0102fc	SPARC	0x82102003	mov  3, %g1 
#140 010300	SPARC	0x94102020	mov  0x20, %o2 
#141 010304	SPARC	0x91d02010	ta  0x10
#142 010308	SPARC	0x82100008	mov  %o0, %g1
#143 01030c	RISCV	0x00010113	mv sp,sp
#144 010310	MIPS	0xa3a2000c	sb v0,12(sp)
#145 010314	MIPS	0x8fa30004	lw v1,4(sp)
#146 010318	MIPS	0x8c640000	lw a0,0(v1)
#147 01031c	MIPS	0x20050000	addi a1,zero,0
encipher_loop_head:   --> bge     x5, x2, encipher_loop_end
#148 010320	RISCV	0x0022de63	ble sp,t0,1033c <encipher_loop_end>
#149 010324	MIPS	0x00653020	add a2,v1,a1
#150 010328	MIPS	0x8cc70000	lw a3,0(a2)
#151 01032c	MIPS	0x00ef3826	xor a3,a3,t7
#152 010330	MIPS	0xacc70000	sw a3,0(a2)
#153 010334	MIPS	0x20a50004	addi a1,a1,4
#154 010338	RISCV	0xfe9ff06f	j 10320 <encipher_loop_head>
encipher_loop_end:   --> li      x7, 0
#155 01033c	RISCV	0x00000393	li t2,0
#156 010340	RISCV	0x02000413	li s0,32
#157 010344	RISCV	0x000ea983	lw s3,0(t4)
#158 010348	RISCV	0x004eaa03	lw s4,4(t4)
#159 01034c	RISCV	0x00000a93	li s5,0
#160 010350	RISCV	0x00000b13	li s6,0
#161 010354	RISCV	0x00000b93	li s7,0
#162 010358	RISCV	0x00000c13	li s8,0
loop_head:   --> bge     x7, x8, loop_end
#163 01035c	RISCV	0x0283da63	ble s0,t2,10390 <loop_end>
#164 010360	RISCV	0x00798ab3	add s5,s3,t2
#165 010364	RISCV	0x007a0b33	add s6,s4,t2
#166 010368	RISCV	0x000aac83	lw s9,0(s5)
#167 01036c	RISCV	0x000b2d03	lw s10,0(s6)
#168 010370	MIPS	0x032f1026	xor v0,t9,t7
#169 010374	MIPS	0x03401825	move v1,k0
#170 010378	RISCV	0x01800233	add tp,zero,s8
#171 01037c	ARM	0xe1520003	cmp r2, r3
#172 010380	ARM	0x12844001	addne r4, r4, #1
#173 010384	RISCV	0x00400c33	add s8,zero,tp
#174 010388	RISCV	0x00438393	addi t2,t2,4
#175 01038c	RISCV	0xfd1ff06f	j 1035c <loop_head>
loop_end:   --> sb $zero, 12($sp)  
#176 010390	MIPS	0xa3a0000c	sb zero,12(sp)
#177 010394	RISCV	0x03805063	blez s8,103b4 <good_match>
#178 010398	SPARC	0x84102004	mov  4, %g2 
#179 01039c	RISCV	0x00100513	li a0,1
#180 0103a0	RISCV	0x019d8593	addi a1,s11,25
#181 0103a4	RISCV	0x01800613	li a2,24
#182 0103a8	RISCV	0x04000893	li a7,64
#183 0103ac	RISCV	0x00000073	ecall
#184 0103b0	MIPS	0x1000ff5a	b 1011c <ready_prompt>
good_match:   --> li   $v0, 4005       
#185 0103b4	MIPS	0x24020fa5	li v0,4005
#186 0103b8	SPARC	0x05000041	sethi  %hi(0x10400), %g2
#186 0103b8	SPARC	0x8410a15c	or  %g2, 0x15c, %g2 
#188 0103c0	MIPS	0x24050000	li a1,0
#189 0103c4	MIPS	0x24060000	li a2,0
#190 0103c8	MIPS	0x0000000c	syscall
#191 0103cc	MIPS	0x00402025	move a0,v0
#192 0103d0	SPARC	0x90100002	mov  %g2, %o0
#193 0103d4	MIPS	0x8fa20004	lw v0,4(sp)
#194 0103d8	SPARC	0x92100001	mov  %g1, %o1
#195 0103dc	SPARC	0x82102003	mov  3, %g1 
#196 0103e0	SPARC	0x94102024	mov  0x24, %o2 
#197 0103e4	SPARC	0x91d02010	ta  0x10
#198 0103e8	SPARC	0x86100008	mov  %o0, %g3
#199 0103ec	MIPS	0xafa6000c	sw a2,12(sp)
#200 0103f0	RISCV	0x004ea583	lw a1,4(t4)
#201 0103f4	RISCV	0x00100513	li a0,1
#202 0103f8	MIPS	0x8fac000c	lw t4,12(sp)
#203 0103fc	RISCV	0x04000893	li a7,64
#204 010400	RISCV	0x00000073	ecall
#205 010404	RISCV	0x00100513	li a0,1
#206 010408	RISCV	0x000d8593	mv a1,s11
#207 01040c	RISCV	0x00100613	li a2,1
#208 010410	RISCV	0x04000893	li a7,64
#209 010414	RISCV	0x00000073	ecall
#210 010418	RISCV	0x00000013	nop
#211 01041c	ARM	0xe1a00000	nop   ; (mov r0, r0)
#212 010420	SPARC	0x01000000	nop 
quitit:   --> mov r0, #1               @ STDOUT ARM
#213 010424	ARM	0xe3a00001	mov r0, #1
#214 010428	RISCV	0x000d8093	mv ra,s11
#215 01042c	ARM	0xe3a02001	mov r2, #1
#216 010430	ARM	0xe3a07004	mov r7, #4
#217 010434	ARM	0xef000000	svc 0x00000000
#218 010438	MIPS	0x236b0000	addi t3,k1,0
#219 01043c	RISCV	0x00100513	li a0,1
#220 010440	RISCV	0x00700613	li a2,7
#221 010444	RISCV	0x04000893	li a7,64
#222 010448	RISCV	0x00000073	ecall
#223 01044c	MIPS	0x24040000	li a0,0
#224 010450	MIPS	0x24020fa1	li v0,4001
#225 010454	MIPS	0x0000000c	syscall
#226 010458	MIPS	0x00000000	nop
#227 01045c	SPARC	0x01000000	nop 
#228 010460	ARM	0xe1a00000	nop   ; (mov r0, r0)
set_pin:   --> set randfn,%g2
#229 010464	SPARC	0x05000041	sethi  %hi(0x10400), %g2
#229 010464	SPARC	0x8410a1e8	or  %g2, 0x1e8, %g2 
#231 01046c	RISCV	0x00000293	li t0,0
#232 010470	MIPS	0x24020fa5	li v0,4005
#233 010474	MIPS	0x0000000c	syscall
#234 010478	SPARC	0x9a100001	mov  %g1, %o5
#235 01047c	SPARC	0x90100001	mov  %g1, %o0
#236 010480	MIPS	0x23a20014	addi v0,sp,20
#237 010484	SPARC	0x92100001	mov  %g1, %o1
#238 010488	SPARC	0x82102003	mov  3, %g1 
#239 01048c	SPARC	0x94102004	mov  4, %o2 
#240 010490	SPARC	0x91d02010	ta  0x10
#241 010494	RISCV	0x014ea783	lw a5,20(t4)
#242 010498	RISCV	0x000eaa23	sw zero,20(t4)
#243 01049c	SPARC	0x8410000d	mov  %o5, %g2
#244 0104a0	MIPS	0x24020fa6	li v0,4006
#245 0104a4	MIPS	0x0000000c	syscall
pin_loaded:   --> jr ra
#246 0104a8	RISCV	0x00008067	ret
#247 0104ac	MIPS	0x2404002a	li a0,42
#248 0104b0	MIPS	0x24020fa1	li v0,4001
#249 0104b4	MIPS	0x0000000c	syscall
#250 0104b8	RISCV	0x00000013	nop
#251 0104bc	SPARC	0x01000000	nop 
#252 0104c0	SPARC	0x01000000	nop 
#253 0104c4	MIPS	0x00000000	nop
#254 0104c8	MIPS	0x00000000	nop
#255 0104cc	ARM	0xe1a00000	nop   ; (mov r0, r0)
#256 0104d0	ARM	0xe1a00000	nop   ; (mov r0, r0)
#257 0104d4	MIPS	0x00000000	nop
#258 0104d8	SPARC	0x01000000	nop 
#259 0104dc	SPARC	0x01000000	nop 
#260 0104e0	SPARC	0x01000000	nop 
#261 0104e4	MIPS	0x00000000	nop
#262 0104e8	RISCV	0x00000013	nop
#263 0104ec	MIPS	0x00000000	nop
#264 0104f0	MIPS	0x00000000	nop
#265 0104f4	SPARC	0x01000000	nop 
#266 0104f8	ARM	0xe1a00000	nop   ; (mov r0, r0)
